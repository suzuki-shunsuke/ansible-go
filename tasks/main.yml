---
- name: check whether the binary has already installed
  stat:
    path: "{{go_lib_dir}}/go-{{go_version}}"
  register: rgst_stat_binary
  become: no
- block:
  - name: check whether the binary has already downloaded
    stat:
      path: /tmp/go
    register: rgst_stat_downloaded
    become: no
  - name: download and unarchive package
    unarchive:
      src: https://storage.googleapis.com/golang/go{{go_version}}.{{go_os}}-{{go_arch}}.tar.gz
      dest: /tmp
      keep_newer: yes
      remote_src: yes
    become: no
    when: not rgst_stat_downloaded.stat.exists
  - name: create go_lib_dir
    file:
      state: directory
      dest: "{{go_lib_dir}}"
  - name: install go
    command: mv /tmp/go {{go_lib_dir}}/go-{{go_version}}
  when: not rgst_stat_binary.stat.exists
- block:
  - name: check the symbolic to the binary
    stat:
      path: "{{go_lib_dir}}/go"
    register: rgst_go_link
    become: no
  - name: create the symbolic link
    file:
      state: link
      src: "{{go_lib_dir}}/go-{{go_version}}"
      dest: "{{go_lib_dir}}/go"
  - name: create go_bin_dir
    file:
      state: directory
      dest: "{{go_bin_dir}}"
  - name: create symbolic links
    file:
      state: link
      src: "{{go_lib_dir}}/go/bin/{{item}}"
      dest: "{{go_bin_dir}}/{{item}}"
    with_items:
      - go
      - godoc
      - gofmt
  when: go_create_link
